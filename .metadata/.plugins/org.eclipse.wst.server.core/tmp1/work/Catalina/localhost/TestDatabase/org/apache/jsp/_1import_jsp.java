/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.37
 * Generated at: 2016-11-18 16:47:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import model.*;
import databaseOp.*;

public final class _1import_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Capstone%20Project%20Versions/Capstone_v5/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/TestDatabase/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1474642115245L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("databaseOp");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \r\n");
      out.write("\t\"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<!-- Include meta tag to ensure proper rendering and touch zooming -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css\" />\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style3.css\">\r\n");
      out.write("\r\n");
      out.write("<title>Import</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Import -->\r\n");
      out.write("\t\t<div data-role=\"page\" id=\"import\">\r\n");
 
				DatabaseOperations dao=new DatabaseOperations();
				List<FileData> filedata = new FileData();
				filedata=dao.getAllFileData();
							
				//int size1=filedata.size();
				
				List<Client> clients = new Client();
				clients = dao.getAllClients();
				int size1 = clients.size();
				
      out.write("\r\n");
      out.write("\t<div class=\"thumbnail\">\r\n");
      out.write("\t\t\t<img src=\"css/themes/images/t1logo.png\" />\r\n");
      out.write("\t\t\t<div style=\"float:right\">\r\n");
      out.write("\t\t\t<a>Welcome Home, ");
      out.print(session.getAttribute("name"));
      out.write("!</a>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<a href=\"logout.jsp\">Log Out</a>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<a href=\"1help.jsp\">Help</a>&nbsp;\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div id=\"maintab\" class=\"ui-bar ui-bar-a\">\r\n");
      out.write("\t\t\t\t\t<p style=\"text-align:center; font-size: 20px;font-family: 'Comfortaa', cursive;\">Financial\r\n");
      out.write("\t\t\t\tReporting Tool</p>\r\n");
      out.write("\t\t\t\t<div data-role=\"navbar\" id=\"tabs\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"1home.jsp\" data-icon=\"home\" class=\"ui-corner-all\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"1import.jsp\" data-icon=\"info\" class=\"ui-corner-all\">Import Timesheets</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li ><a href=\"1project.jsp\" data-icon=\"bullets\" class=\"ui-corner-all\">Projects</a></li>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t\t<button data-icon=\"action\" class=\"ui-corner-all\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"background: #2164d1; color: white; width: 269px;\">Reports</button>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"dropdown-content\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"position: fixed; background: #2164d1; color: white; width: 269px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"projectSummaryReport.jsp\">Project Summary Report</a> <a href=\"resourceHours.jsp\">Resource\r\n");
      out.write("\t\t\t\t\t\t\t\t\tAnalysation Report</a> <a href=\"billRateDepartment.jsp\">Bill Rate For Department </a>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t\t<button data-icon=\"user\" class=\"ui-corner-all\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"background: #2164d1; color: white; width: 269px;\">Manage</button>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"dropdown-content\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"position: fixed; background: #2164d1; color: white; width: 267px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"2resources.jsp\">Resources</a> \r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"2clients.jsp\">Clients</a> \r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t<div data-role=\"main\" class=\"ui-content\" id=\"welcomepage\" \r\n");
      out.write("\t\tstyle=\"background-color:light-white\">\r\n");
      out.write("\t\t\t<!-- #d8ecf3,#c4e3ed to try -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form method=\"post\" action=\"UploadController\" enctype=\"multipart/form-data\" data-ajax=\"false\" style=\"width: 300px\" accept=\".csv\">\r\n");
      out.write("\t\t\tSelect file to upload: <input type=\"file\" name=\"uploadFile\" /> \r\n");
      out.write("\t\t\t<input data-ajax=\"false\" type=\"submit\" value=\"Upload\"/>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("      \t\r\n");
      out.write("      \t\r\n");
      out.write("      \t <form class=\"ui-filterable\">\r\n");
      out.write("  <input id=\"myFilter\" data-type=\"search\" placeholder=\"Search by Client Name or Project name\">\r\n");
      out.write("</form>\r\n");
      out.write("      \t<br>\r\n");
      out.write("\t\t\t<table data-filter=\"true\" data-input=\"#myFilter\" id= \"myTable\" style=\"width: 100%; margin: auto; left: 50%;background-color:#40bf80;\" class=\"table\">\r\n");
      out.write("\t\t\t\t");

					for (int i = 0; i < size1; i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr style= \"font-size:20px;\" >\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<th class=\"info\"><b>");
      out.print(((Client)clients.get(i)).getClientName());
      out.write("</b></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

						String name = clients.get(i).getClientName();
						pageContext.setAttribute("name", name);
						List<Project> clientProjects = dao.getAllClientProjects(name);
						System.out.println(name);
						for (int j = 0; j < clientProjects.size(); j++) {
							String team = ((Project) clientProjects.get(j)).getTeam();
							List<String> teamList = Arrays.asList(team.split(", "));
							System.out.println(team);
							String projectName = clientProjects.get(j).getProjectName();
							pageContext.setAttribute("projectName", projectName);
							double projectSum = dao.getSumProjectHours(projectName);
							pageContext.setAttribute("projectSum", projectSum);
							
				
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<div data-role=\"collapsible\">\r\n");
      out.write("\t\t\t\t\t\t\t<h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<span class=\"ui-li-count\">Total hours: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectSum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("\t\t\t\t\t\t\t<p hidden>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t\t<h4>Project Resources:</h4>\r\n");
      out.write("\t\t\t\t\t\t\t");

							System.out.println("running from import.jsp");
							
								for (int k = 0; k < teamList.size(); k++) {
									String resourceName = teamList.get(k);
									
									
										double sum = dao.getSumHours(resourceName, projectName);
										pageContext.setAttribute("sum", sum);
										pageContext.setAttribute("resourceName", resourceName);
															
									
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div data-role=\"collapsible\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resourceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<span class=\"ui-li-count\">Total hours: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t<h4>Time Logged:</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th >Date &nbsp&nbsp&nbsp&nbsp&nbsp</th> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>&nbsp &nbsp &nbsp&nbsp&nbsp Hours</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
			
									for (int l = 0; l < filedata.size(); l++) {
													String fname = filedata.get(l).getFname();
													String projectname = filedata.get(l).getProject();
													String timeRecord;
													String hours;

													if (fname.equals(teamList.get(k))
															&& clientProjects.get(j).getProjectName().equals(projectname)) {
														timeRecord = filedata.get(l).getDate();
														hours = filedata.get(l).getHoure();
														pageContext.setAttribute("timeRecord", timeRecord);
														pageContext.setAttribute("hours", hours);
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${timeRecord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</th> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>&nbsp&nbsp&nbsp ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hours}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</th> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									}
								
									}			
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t");
						
								}
											
								
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

									
						}
						
					}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("</div>\t\t\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
